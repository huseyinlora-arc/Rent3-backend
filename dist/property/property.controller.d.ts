import { PropertyService } from './property.service';
import { Prisma } from '@prisma/client';
export declare class PropertyController {
    private readonly propertyService;
    constructor(propertyService: PropertyService);
    create(createPropertyDto: Prisma.PropertyCreateInput): Promise<{
        id: number;
        ownerAddress: string;
        tenantAddress: string | null;
        country: string;
        city: string;
        address: string;
        neighborhood: string;
        type: import(".prisma/client").$Enums.PaymentType;
        bedrooms: number;
        bathrooms: number;
        furnished: boolean;
        floorSizeSqm: number;
        description: string;
        yearBuilt: number | null;
        parkingSpaces: number | null;
        amenities: import(".prisma/client").$Enums.Amenity[];
        rentalPrice: number;
        dateAvailable: Date | null;
        createdAt: Date;
        updatedAt: Date;
    }>;
    findAll(): Prisma.PrismaPromise<{
        id: number;
        ownerAddress: string;
        tenantAddress: string | null;
        country: string;
        city: string;
        address: string;
        neighborhood: string;
        type: import(".prisma/client").$Enums.PaymentType;
        bedrooms: number;
        bathrooms: number;
        furnished: boolean;
        floorSizeSqm: number;
        description: string;
        yearBuilt: number | null;
        parkingSpaces: number | null;
        amenities: import(".prisma/client").$Enums.Amenity[];
        rentalPrice: number;
        dateAvailable: Date | null;
        createdAt: Date;
        updatedAt: Date;
    }[]>;
    findOne(id: string): Prisma.Prisma__PropertyClient<{
        id: number;
        ownerAddress: string;
        tenantAddress: string | null;
        country: string;
        city: string;
        address: string;
        neighborhood: string;
        type: import(".prisma/client").$Enums.PaymentType;
        bedrooms: number;
        bathrooms: number;
        furnished: boolean;
        floorSizeSqm: number;
        description: string;
        yearBuilt: number | null;
        parkingSpaces: number | null;
        amenities: import(".prisma/client").$Enums.Amenity[];
        rentalPrice: number;
        dateAvailable: Date | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    update(id: string, updatePropertyDto: Prisma.PropertyUpdateInput): Prisma.Prisma__PropertyClient<{
        id: number;
        ownerAddress: string;
        tenantAddress: string | null;
        country: string;
        city: string;
        address: string;
        neighborhood: string;
        type: import(".prisma/client").$Enums.PaymentType;
        bedrooms: number;
        bathrooms: number;
        furnished: boolean;
        floorSizeSqm: number;
        description: string;
        yearBuilt: number | null;
        parkingSpaces: number | null;
        amenities: import(".prisma/client").$Enums.Amenity[];
        rentalPrice: number;
        dateAvailable: Date | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
    remove(id: string): Prisma.Prisma__PropertyClient<{
        id: number;
        ownerAddress: string;
        tenantAddress: string | null;
        country: string;
        city: string;
        address: string;
        neighborhood: string;
        type: import(".prisma/client").$Enums.PaymentType;
        bedrooms: number;
        bathrooms: number;
        furnished: boolean;
        floorSizeSqm: number;
        description: string;
        yearBuilt: number | null;
        parkingSpaces: number | null;
        amenities: import(".prisma/client").$Enums.Amenity[];
        rentalPrice: number;
        dateAvailable: Date | null;
        createdAt: Date;
        updatedAt: Date;
    }, never, import("@prisma/client/runtime/library").DefaultArgs>;
}
